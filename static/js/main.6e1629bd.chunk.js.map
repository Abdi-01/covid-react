{"version":3,"sources":["components/navbar.js","support/list_url.js","pages/countriesDetail.js","components/cardCountries.js","pages/countriespage.js","components/cardInfoIna.js","components/cardInfoWorld.js","components/carousel.js","components/jumbotron.js","pages/homepage.js","pages/not404.js","components/cardProvinsi.js","pages/provincepage.js","App.js","serviceWorker.js","index.js"],"names":["NavbarComp","props","btCollapse","setState","collapsed","state","Navbar","color","light","expand","NavbarBrand","className","NavbarToggler","onClick","this","Collapse","isOpen","navbar","Nav","NavItem","to","React","Component","API_URL","API_URL_IDN","CountriesDetail","getDetail","params","match","Axios","get","iso","then","res","console","log","data","confirmed","recovered","deaths","getAllDetail","detail","value","catch","err","url","allData","renderData","map","item","index","key","combinedKey","toLocaleString","active","countries","style","height","overflow","name","iso3","class","Countries","getDataCountries","dataCount","renderCountries","caseCountries","IndoInfo","getDataIndo","dataIndo","jumlahKasus","perawatan","sembuh","meninggal","WorldInfo","getData","dataWorld","CarouselComp","renderCarousel","info","src","alt","id","data-ride","href","role","data-slide","aria-hidden","Jumbo","Jumbotron","Button","outline","Home","NotFound","CardProvince","provinsi","kasusPosi","kasusSemb","kasusMeni","Province","getDataProvinsi","dataProvince","renderCard","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6e1629bd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem } from 'reactstrap'\r\n\r\nclass NavbarComp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: false\r\n        }\r\n    }\r\n\r\n    btCollapse = () => {\r\n        this.setState({ collapsed: !this.state.collapsed })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"faded\" light expand=\"md\">\r\n                    <NavbarBrand className=\"mr-auto\">Covid19</NavbarBrand>\r\n                    <NavbarToggler onClick={this.btCollapse} className=\"mr-2\"></NavbarToggler>\r\n                    <Collapse isOpen={this.state.collapsed} navbar>\r\n                        <Nav>\r\n                            <NavItem>\r\n                                <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <Link to=\"/countries\" className=\"nav-link\">Countries</Link>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <Link to=\"/province\" className=\"nav-link\">Province</Link>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarComp;","export const API_URL = \"https://covid19.mathdro.id\"\r\nexport const API_URL_IDN = \"https://indonesia-covid-19-api.now.sh\"","import React from 'react';\r\nimport Axios from 'axios';\r\nimport { API_URL } from '../support/list_url'\r\n\r\n// const API_URL = \"https://covid19.mathdro.id\"\r\nclass CountriesDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            confirmed: 0,\r\n            recovered: 0,\r\n            deaths: 0,\r\n            allData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDetail()\r\n    }\r\n\r\n    getDetail = () => {\r\n        // Untuk mendapatkan data dari parameter URL\r\n        let { params } = this.props.match\r\n        Axios.get(API_URL + `/api/countries/${params.iso}`)\r\n            .then((res) => {\r\n                console.log(\"Get Detail :\", res.data)\r\n                let { confirmed, recovered, deaths } = res.data\r\n                this.getAllDetail(confirmed.detail)\r\n                this.setState({\r\n                    confirmed: confirmed.value,\r\n                    recovered: recovered.value,\r\n                    deaths: deaths.value\r\n                })\r\n            }).catch((err) => {\r\n                console.log(\"Get Detail Error :\", err)\r\n            })\r\n    }\r\n\r\n    getAllDetail = (url) => {\r\n        Axios.get(url)\r\n            .then((res) => {\r\n                console.log(\"Get All Detail Success :\", res.data)\r\n                this.setState({ allData: res.data })\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Get All Detail Error :\", err)\r\n            })\r\n    }\r\n\r\n    renderData = () => {\r\n        return this.state.allData.map((item, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <th>{index + 1}</th>\r\n                    <td>{item.combinedKey}</td>\r\n                    <td>{item.confirmed.toLocaleString()}</td>\r\n                    <td>{item.recovered.toLocaleString()}</td>\r\n                    <td>{item.deaths.toLocaleString()}</td>\r\n                    <td>{item.active.toLocaleString()}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // Untuk mendapat parameter dari URL lihat this.props.match untuk detailnya\r\n        let { params } = this.props.match\r\n        console.log(this.props.match)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card text-center \">\r\n                    <h5 className=\"card-header\">{params.countries}</h5>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-4\">\r\n                                <div className=\"card bg-info text-white\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Confirmed</h5>\r\n                                        <h2>{this.state.confirmed.toLocaleString()}</h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-4\">\r\n                                <div className=\"card bg-success text-white\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Recovered</h5>\r\n                                        <h2>{this.state.recovered.toLocaleString()}</h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-4\">\r\n                                <div className=\"card bg-danger text-white\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Deaths</h5>\r\n                                        <h2>{this.state.deaths.toLocaleString()}</h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ height: \"60vh\", overflow: \"auto\" }}>\r\n                    <table className=\"table table-hover my-3 \" >\r\n                        <thead className=\"thead-dark\" >\r\n                            <tr>\r\n                                <th>No</th>\r\n                                <th>City</th>\r\n                                <th>Confirmed</th>\r\n                                <th>Recovered</th>\r\n                                <th>Deaths</th>\r\n                                <th>Active</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderData()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountriesDetail;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div className=\"col-4 col-sm-4\">\r\n            <Link to={`/countries-detail/${props.data.name}/${props.data.iso3}`}>\r\n                <div class=\"card-header \">\r\n                    {props.data.name}\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Axios from 'axios';\r\nimport CardCountries from '../components/cardCountries';\r\nimport {API_URL} from '../support/list_url'\r\n\r\nclass Countries extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataCount:[],\r\n            caseCountries:[],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataCountries()\r\n    }\r\n\r\n    getDataCountries = () => {\r\n        Axios.get(API_URL + \"/api/countries\")\r\n            .then((res) => {\r\n                console.log(\"Get Countries Success :\", res.data)\r\n                this.setState({ dataCount: res.data.countries })\r\n            }).catch((err) => {\r\n                console.log(\"Get Countries Error :\", err)\r\n            })\r\n    }\r\n\r\n    renderCountries = () => {\r\n        return this.state.dataCount.map((item, index) => {\r\n            return (\r\n                <CardCountries data={item} key={index} />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {this.renderCountries()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Countries;","import React from 'react';\r\nimport Axios from 'axios';\r\nimport {API_URL_IDN} from '../support/list_url'\r\n\r\nclass IndoInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataIndo: {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataIndo()\r\n    }\r\n\r\n    getDataIndo = () => {\r\n        Axios.get(API_URL_IDN + \"/api\")\r\n            .then((res) => {\r\n                console.log(\"Get Indo Success :\", res.data)\r\n                this.setState({ dataIndo: res.data })\r\n            }).catch((err) => {\r\n                console.log(\"Get Indo Error :\", err)\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        let { dataIndo } = this.state\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Covid-19 Indonesia Summary</h2>\r\n                <div className=\"row text-center\">\r\n                    <div className=\"col-12 col-md-3\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Amount Case</h5>\r\n                                {\r\n                                    dataIndo.jumlahKasus ?\r\n                                        <h2>{dataIndo.jumlahKasus.toLocaleString()}</h2>\r\n                                        :\r\n                                        <h3>Waiting</h3>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-3\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Treatment</h5>\r\n                                {\r\n                                    dataIndo.perawatan ?\r\n                                        <h2>{dataIndo.perawatan.toLocaleString()}</h2>\r\n                                        :\r\n                                        <h3>Waiting</h3>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-3\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Recovered</h5>\r\n                                {\r\n                                    dataIndo.sembuh ?\r\n                                        <h2>{dataIndo.sembuh.toLocaleString()}</h2>\r\n                                        :\r\n                                        <h3>Waiting</h3>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-3\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Deaths</h5>\r\n                                {\r\n                                    dataIndo.meninggal ?\r\n                                        <h2>{dataIndo.meninggal.toLocaleString()}</h2>\r\n                                        :\r\n                                        <h3>Waiting</h3>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndoInfo;","import React from 'react';\r\nimport Axios from 'axios'\r\nimport {API_URL} from '../support/list_url'\r\n\r\nclass WorldInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataWorld: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    getData = () => {\r\n        Axios.get(API_URL + '/api')\r\n            .then((res) => {\r\n                console.log(\"Get Success :\", res.data)\r\n                this.setState({ dataWorld: res.data })\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Get Error :\", err)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let { dataWorld } = this.state\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Covid-19 World Summary</h2>\r\n                <div className=\"row text-center\">\r\n                    <div className=\"col-12 col-md-4\">\r\n                        <div className=\"card text-white bg-primary\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Confirmed</h5>\r\n                                {\r\n                                    dataWorld.confirmed ?\r\n                                        <h2>{dataWorld.confirmed.value.toLocaleString()}</h2>\r\n                                        :\r\n                                        <h3>Waiting</h3>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4\">\r\n                        <div className=\"card text-white bg-success\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Recovered</h5>\r\n                                {\r\n                                    dataWorld.recovered ?\r\n                                        <h2>{dataWorld.recovered.value.toLocaleString()}</h2>\r\n                                        :\r\n                                        <h3>Waiting</h3>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4\">\r\n                        <div className=\"card text-white bg-danger\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Deaths</h5>\r\n                                {\r\n                                    dataWorld.deaths ?\r\n                                        <h2>{dataWorld.deaths.value.toLocaleString()}</h2>\r\n                                        :\r\n                                        <h3>Waiting</h3>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WorldInfo;","import React from 'react';\r\n\r\nclass CarouselComp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            info: [\r\n                \"https://storage.googleapis.com/pkg-portal-bucket/images/news/2020-03/himbauan-terkait-covid-19/_1200x630_crop_center-center_82_none/pg_notice-covid-19.png\",\r\n                \"https://www.tsm.ac.id/wp-content/uploads/2020/03/Covid-19.jpg\",\r\n                \"https://www.biem.co/wp-content/uploads/2020/04/sosial-distancing.jpg\"\r\n            ]\r\n        }\r\n    }\r\n\r\n    renderCarousel = () => {\r\n        return this.state.info.map((item, index) => {\r\n            if (index === 0) {\r\n                return (\r\n                    <div key={index} className=\"carousel-item active\" style={{height:\"50%\"}}>\r\n                        <img className=\"d-block w-100\"  src={item} alt={`Slide${index + 1}`} />\r\n                    </div>\r\n                )\r\n            }\r\n            return (\r\n                <div key={index} className=\"carousel-item\" >\r\n                    <img className=\"d-block w-100\" style={{height:386}} src={item} alt={`Slide${index + 1}`} />\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"carouselInfo\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                <div className=\"carousel-inner\" >\r\n                    {this.renderCarousel()}\r\n                </div>\r\n                <a className=\"carousel-control-prev\" href=\"#carouselInfo\" role=\"button\" data-slide=\"prev\">\r\n                    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\" />\r\n                    <span className=\"sr-only\">Previous</span>\r\n                </a>\r\n                <a className=\"carousel-control-next\" href=\"#carouselInfo\" role=\"button\" data-slide=\"next\">\r\n                    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\" />\r\n                    <span className=\"sr-only\">Next</span>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CarouselComp;","import React from 'react';\r\nimport { Button, Jumbotron } from 'reactstrap';\r\n\r\nconst Jumbo = (props) => {\r\n    return (\r\n        <div>\r\n            <Jumbotron>\r\n                <h1>Covid Info</h1>\r\n                <p className=\"lead\">This is a simple hero unit, a simple Jumbotron-style component for calling extra attention to featured content or information.</p>\r\n                <hr className=\"my-2\" />\r\n                <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\r\n            <p className=\"lead\">\r\n                <Button outline color=\"primary\">Get Info</Button>\r\n            </p>\r\n            </Jumbotron>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbo","import React from 'react';\r\nimport IndoInfo from '../components/cardInfoIna';\r\nimport WorldInfo from '../components/cardInfoWorld';\r\nimport CarouselComp from '../components/carousel';\r\nimport Jumbo from '../components/jumbotron';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <CarouselComp/>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Jumbo/>\r\n                    </div>\r\n                </div>\r\n                <WorldInfo/>\r\n                <IndoInfo/>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport '../assets/style/notFound.css'\r\n\r\nclass NotFound extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"notfound\">\r\n                <div className=\"notfound\">\r\n                    <div className=\"notfound-404\">\r\n                        <h3>Oops! Page not found</h3>\r\n                        <h1><span>4</span><span>0</span><span>4</span></h1>\r\n                    </div>\r\n                    <h2>we are sorry, but the page you requested was not found</h2>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\n\r\nconst CardProvince = (props) => {\r\n    return (\r\n        <div className=\"col-12 col-sm-4\" key={props.key}>\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">{props.data.provinsi}</div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">Positif : {props.data.kasusPosi.toLocaleString()}</li>\r\n                    <li className=\"list-group-item\">Sembuh : {props.data.kasusSemb.toLocaleString()}</li>\r\n                    <li className=\"list-group-item\">Meninggal : {props.data.kasusMeni.toLocaleString()}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardProvince","import React from 'react';\r\nimport Axios from 'axios';\r\nimport CardProvince from '../components/cardProvinsi';\r\nimport {API_URL_IDN} from '../support/list_url'\r\n\r\nclass Province extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataProvince: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataProvinsi()\r\n    }\r\n\r\n    getDataProvinsi = () => {\r\n        Axios.get(API_URL_IDN + \"/api/provinsi\")\r\n            .then((res) => {\r\n                console.log(\"Get Provinsi SUccess :\", res.data.data)\r\n                this.setState({ dataProvince: res.data.data })\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Get Provinsi Error :\", err)\r\n            })\r\n    }\r\n\r\n    renderCard = () => {\r\n        return this.state.dataProvince.map((item, index) => {\r\n            return (\r\n                <CardProvince data={item} key={index}/>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {this.renderCard()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Province;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/navbar'\nimport CountriesDetail from './pages/countriesDetail';\nimport Countries from './pages/countriespage';\nimport Home from './pages/homepage';\nimport NotFound from './pages/not404';\nimport Province from './pages/provincepage';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/province\" component={Province} />\n          <Route path=\"/countries\" component={Countries} />\n          {/* Menerapkan parameter pada path route */}\n          <Route path=\"/countries-detail/:countries/:iso\" component={CountriesDetail} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}